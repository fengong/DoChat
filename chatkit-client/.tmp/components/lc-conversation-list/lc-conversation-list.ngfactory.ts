/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from './lc-conversation-list';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from 'ionic-angular/util/events';
import * as import9 from '@angular/core/src/metadata/view';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from 'ionic-angular/components/list/list';
import * as import12 from '@angular/common/src/directives/ng_for';
import * as import13 from 'ionic-angular/config/config';
import * as import14 from '@angular/core/src/linker/element_ref';
import * as import15 from 'ionic-angular/gestures/gesture-controller';
import * as import16 from '@angular/core/src/linker/template_ref';
import * as import17 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import18 from 'ionic-angular/components/item/item';
import * as import19 from '@angular/core/src/linker/query_list';
import * as import20 from '../text-img/color-generator';
import * as import21 from '../text-img/text-img';
import * as import22 from '../../node_modules/ionic-angular/components/item/item.ngfactory';
import * as import23 from 'ionic-angular/util/form';
var renderType_LCConversationList_Host:import0.RenderComponentType = (null as any);
class _View_LCConversationList_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _LCConversationList_0_4:import3.LCConversationList;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_LCConversationList_Host0,renderType_LCConversationList_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('lc-conversation-list',rootSelector,(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_LCConversationList0(this.viewUtils,this.injector(0),this._appEl_0);
    this._LCConversationList_0_4 = new import3.LCConversationList(compView_0.ref,this.parentInjector.get(import8.Events));
    this._appEl_0.initComponent(this._LCConversationList_0_4,([] as any[]),compView_0);
    compView_0.create(this._LCConversationList_0_4,this.projectableNodes,(null as any));
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.LCConversationList) && (0 === requestNodeIndex))) { return this._LCConversationList_0_4; }
    return notFoundResult;
  }
}
function viewFactory_LCConversationList_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_LCConversationList_Host === (null as any))) { (renderType_LCConversationList_Host = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,([] as any[]),{})); }
  return new _View_LCConversationList_Host0(viewUtils,parentInjector,declarationEl);
}
export const LCConversationListNgFactory:import10.ComponentFactory<import3.LCConversationList> = new import10.ComponentFactory<import3.LCConversationList>('lc-conversation-list',viewFactory_LCConversationList_Host0,import3.LCConversationList);
const styles_LCConversationList:any[] = ([] as any[]);
var renderType_LCConversationList:import0.RenderComponentType = (null as any);
class _View_LCConversationList0 extends import1.AppView<import3.LCConversationList> {
  _el_0:any;
  _List_0_3:import11.List;
  _text_1:any;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _appEl_3:import2.AppElement;
  _TemplateRef_3_5:any;
  _NgFor_3_6:import12.NgFor;
  _text_4:any;
  /*private*/ _expr_0:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_LCConversationList0,renderType_LCConversationList,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._el_0 = this.renderer.createElement(parentRenderNode,'ion-list',(null as any));
    this._List_0_3 = new import11.List(this.parentInjector.get(import13.Config),new import14.ElementRef(this._el_0),this.renderer,this.parentInjector.get(import15.GestureController));
    this._text_1 = this.renderer.createText(this._el_0,'\n	',(null as any));
    this._text_2 = this.renderer.createText(this._el_0,'\n	',(null as any));
    this._anchor_3 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._appEl_3 = new import2.AppElement(3,0,this,this._anchor_3);
    this._TemplateRef_3_5 = new import16.TemplateRef_(this._appEl_3,viewFactory_LCConversationList1);
    this._NgFor_3_6 = new import12.NgFor(this._appEl_3.vcRef,this._TemplateRef_3_5,this.parentInjector.get(import17.IterableDiffers),this.ref);
    this._text_4 = this.renderer.createText(this._el_0,'\n',(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    this.init(([] as any[]),[
      this._el_0,
      this._text_1,
      this._text_2,
      this._anchor_3,
      this._text_4
    ]
    ,([] as any[]),([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import16.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import12.NgFor) && (3 === requestNodeIndex))) { return this._NgFor_3_6; }
    if (((token === import11.List) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 4)))) { return this._List_0_3; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    var changes:{[key: string]:import7.SimpleChange} = (null as any);
    changes = (null as any);
    const currVal_0:any = this.context.items;
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this._NgFor_3_6.ngForOf = currVal_0;
      if ((changes === (null as any))) { (changes = {}); }
      changes['ngForOf'] = new import7.SimpleChange(this._expr_0,currVal_0);
      this._expr_0 = currVal_0;
    }
    if ((changes !== (null as any))) { this._NgFor_3_6.ngOnChanges(changes); }
    if (!throwOnChange) { this._NgFor_3_6.ngDoCheck(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
export function viewFactory_LCConversationList0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.LCConversationList> {
  if ((renderType_LCConversationList === (null as any))) { (renderType_LCConversationList = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,styles_LCConversationList,{})); }
  return new _View_LCConversationList0(viewUtils,parentInjector,declarationEl);
}
class _View_LCConversationList1 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _Item_0_4:import18.Item;
  _ItemContent_0_5:import18.ItemContent;
  _query_Label_0_0:import19.QueryList<any>;
  _query_Button_0_1:import19.QueryList<any>;
  _query_Icon_0_2:import19.QueryList<any>;
  _text_1:any;
  _el_2:any;
  _ColorGenerator_2_3:import20.ColorGenerator;
  _TextImage_2_4:import21.TextImage;
  _text_3:any;
  _el_4:any;
  _el_5:any;
  _text_6:any;
  _text_7:any;
  _el_8:any;
  _el_9:any;
  _text_10:any;
  _text_11:any;
  _text_12:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_LCConversationList1,renderType_LCConversationList,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'button',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','item item-block');
    this.renderer.setElementAttribute(this._el_0,'detail-none','');
    this.renderer.setElementAttribute(this._el_0,'ion-item','');
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = import22.viewFactory_Item0(this.viewUtils,this.injector(0),this._appEl_0);
    this._Item_0_4 = new import18.Item(this.parent.parentInjector.get(import23.Form),this.parent.parentInjector.get(import13.Config),new import14.ElementRef(this._el_0),this.renderer);
    this._ItemContent_0_5 = new import18.ItemContent();
    this._query_Label_0_0 = new import19.QueryList<any>();
    this._query_Button_0_1 = new import19.QueryList<any>();
    this._query_Icon_0_2 = new import19.QueryList<any>();
    this._appEl_0.initComponent(this._Item_0_4,([] as any[]),compView_0);
    this._text_1 = this.renderer.createText((null as any),'\n    ',(null as any));
    this._el_2 = this.renderer.createElement((null as any),'text-img',(null as any));
    this.renderer.setElementAttribute(this._el_2,'item-left','');
    this._ColorGenerator_2_3 = new import20.ColorGenerator();
    this._TextImage_2_4 = new import21.TextImage(new import14.ElementRef(this._el_2),this._ColorGenerator_2_3);
    this._text_3 = this.renderer.createText((null as any),'\n    ',(null as any));
    this._el_4 = this.renderer.createElement((null as any),'p',(null as any));
    this._el_5 = this.renderer.createElement(this._el_4,'b',(null as any));
    this._text_6 = this.renderer.createText(this._el_5,'',(null as any));
    this._text_7 = this.renderer.createText((null as any),'\n	',(null as any));
    this._el_8 = this.renderer.createElement((null as any),'p',(null as any));
    this._el_9 = this.renderer.createElement(this._el_8,'b',(null as any));
    this._text_10 = this.renderer.createText(this._el_9,'',(null as any));
    this._text_11 = this.renderer.createText(this._el_8,'',(null as any));
    this._text_12 = this.renderer.createText((null as any),'\n  ',(null as any));
    this._query_Label_0_0.reset(([] as any[]));
    this._Item_0_4.contentLabel = this._query_Label_0_0.first;
    compView_0.create(this._Item_0_4,[
      ([] as any[]).concat([this._el_2]),
      ([] as any[]),
      ([] as any[]).concat([
        this._text_1,
        this._text_3,
        this._el_4,
        this._text_7,
        this._el_8,
        this._text_12
      ]
      ),
      ([] as any[]),
      ([] as any[])
    ]
    ,(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_0,'click',this.eventHandler(this._handle_click_0_0.bind(this)));
    this._expr_1 = import7.UNINITIALIZED;
    this._expr_2 = import7.UNINITIALIZED;
    this._expr_3 = import7.UNINITIALIZED;
    this._expr_4 = import7.UNINITIALIZED;
    this.init(([] as any[]).concat([this._el_0]),[
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._el_5,
      this._text_6,
      this._text_7,
      this._el_8,
      this._el_9,
      this._text_10,
      this._text_11,
      this._text_12
    ]
    ,[disposable_0],([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import20.ColorGenerator) && (2 === requestNodeIndex))) { return this._ColorGenerator_2_3; }
    if (((token === import21.TextImage) && (2 === requestNodeIndex))) { return this._TextImage_2_4; }
    if (((token === import18.Item) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 12)))) { return this._Item_0_4; }
    if (((token === import18.ItemContent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 12)))) { return this._ItemContent_0_5; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1:any = this.context.$implicit.name;
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this._TextImage_2_4.text = currVal_1;
      this._expr_1 = currVal_1;
    }
    this.detectContentChildrenChanges(throwOnChange);
    if (!throwOnChange) {
      if (this._query_Button_0_1.dirty) {
        this._query_Button_0_1.reset(([] as any[]));
        this._Item_0_4._buttons = this._query_Button_0_1;
        this._query_Button_0_1.notifyOnChanges();
      }
      if (this._query_Icon_0_2.dirty) {
        this._query_Icon_0_2.reset(([] as any[]));
        this._Item_0_4._icons = this._query_Icon_0_2;
        this._query_Icon_0_2.notifyOnChanges();
      }
      if ((this.numberOfChecks === 0)) { this._Item_0_4.ngAfterContentInit(); }
    }
    const currVal_2:any = import4.interpolate(1,'',this.context.$implicit.name,'');
    if (import4.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setText(this._text_6,currVal_2);
      this._expr_2 = currVal_2;
    }
    const currVal_3:any = import4.interpolate(1,'',this.context.$implicit.lastMessage.from,'');
    if (import4.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this.renderer.setText(this._text_10,currVal_3);
      this._expr_3 = currVal_3;
    }
    const currVal_4:any = import4.interpolate(1,': ',this.context.$implicit.lastMessage.text,'');
    if (import4.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setText(this._text_11,currVal_4);
      this._expr_4 = currVal_4;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_click_0_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.parent.context.onConversationItemClick(this.context.$implicit)) !== false);
    return (true && pd_0);
  }
}
function viewFactory_LCConversationList1(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  return new _View_LCConversationList1(viewUtils,parentInjector,declarationEl);
}