/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from './lc-conversation-list';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from 'ionic-angular/util/events';
import * as import9 from '@angular/core/src/metadata/view';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from 'ionic-angular/components/list/list';
import * as import12 from '@angular/common/src/directives/ng_for';
import * as import13 from 'ionic-angular/config/config';
import * as import14 from '@angular/core/src/linker/element_ref';
import * as import15 from 'ionic-angular/gestures/gesture-controller';
import * as import16 from '@angular/core/src/linker/template_ref';
import * as import17 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import18 from 'ionic-angular/components/item/item';
import * as import19 from '@angular/core/src/linker/query_list';
import * as import20 from '../text-img/color-generator';
import * as import21 from '../text-img/text-img';
import * as import22 from '../../node_modules/ionic-angular/components/item/item.ngfactory';
import * as import23 from 'ionic-angular/util/form';
var renderType_LCConversationList_Host = null;
var _View_LCConversationList_Host0 = (function (_super) {
    __extends(_View_LCConversationList_Host0, _super);
    function _View_LCConversationList_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_LCConversationList_Host0, renderType_LCConversationList_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_LCConversationList_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('lc-conversation-list', rootSelector, null);
        this._appEl_0 = new import2.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_LCConversationList0(this.viewUtils, this.injector(0), this._appEl_0);
        this._LCConversationList_0_4 = new import3.LCConversationList(compView_0.ref, this.parentInjector.get(import8.Events));
        this._appEl_0.initComponent(this._LCConversationList_0_4, [], compView_0);
        compView_0.create(this._LCConversationList_0_4, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_LCConversationList_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import3.LCConversationList) && (0 === requestNodeIndex))) {
            return this._LCConversationList_0_4;
        }
        return notFoundResult;
    };
    return _View_LCConversationList_Host0;
}(import1.AppView));
function viewFactory_LCConversationList_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_LCConversationList_Host === null)) {
        (renderType_LCConversationList_Host = viewUtils.createRenderComponentType('', 0, import9.ViewEncapsulation.None, [], {}));
    }
    return new _View_LCConversationList_Host0(viewUtils, parentInjector, declarationEl);
}
export var LCConversationListNgFactory = new import10.ComponentFactory('lc-conversation-list', viewFactory_LCConversationList_Host0, import3.LCConversationList);
var styles_LCConversationList = [];
var renderType_LCConversationList = null;
var _View_LCConversationList0 = (function (_super) {
    __extends(_View_LCConversationList0, _super);
    function _View_LCConversationList0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_LCConversationList0, renderType_LCConversationList, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_LCConversationList0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._el_0 = this.renderer.createElement(parentRenderNode, 'ion-list', null);
        this._List_0_3 = new import11.List(this.parentInjector.get(import13.Config), new import14.ElementRef(this._el_0), this.renderer, this.parentInjector.get(import15.GestureController));
        this._text_1 = this.renderer.createText(this._el_0, '\n	', null);
        this._text_2 = this.renderer.createText(this._el_0, '\n	', null);
        this._anchor_3 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._appEl_3 = new import2.AppElement(3, 0, this, this._anchor_3);
        this._TemplateRef_3_5 = new import16.TemplateRef_(this._appEl_3, viewFactory_LCConversationList1);
        this._NgFor_3_6 = new import12.NgFor(this._appEl_3.vcRef, this._TemplateRef_3_5, this.parentInjector.get(import17.IterableDiffers), this.ref);
        this._text_4 = this.renderer.createText(this._el_0, '\n', null);
        this._expr_0 = import7.UNINITIALIZED;
        this.init([], [
            this._el_0,
            this._text_1,
            this._text_2,
            this._anchor_3,
            this._text_4
        ], [], []);
        return null;
    };
    _View_LCConversationList0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import16.TemplateRef) && (3 === requestNodeIndex))) {
            return this._TemplateRef_3_5;
        }
        if (((token === import12.NgFor) && (3 === requestNodeIndex))) {
            return this._NgFor_3_6;
        }
        if (((token === import11.List) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 4)))) {
            return this._List_0_3;
        }
        return notFoundResult;
    };
    _View_LCConversationList0.prototype.detectChangesInternal = function (throwOnChange) {
        var changes = null;
        changes = null;
        var currVal_0 = this.context.items;
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this._NgFor_3_6.ngForOf = currVal_0;
            if ((changes === null)) {
                (changes = {});
            }
            changes['ngForOf'] = new import7.SimpleChange(this._expr_0, currVal_0);
            this._expr_0 = currVal_0;
        }
        if ((changes !== null)) {
            this._NgFor_3_6.ngOnChanges(changes);
        }
        if (!throwOnChange) {
            this._NgFor_3_6.ngDoCheck();
        }
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_LCConversationList0;
}(import1.AppView));
export function viewFactory_LCConversationList0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_LCConversationList === null)) {
        (renderType_LCConversationList = viewUtils.createRenderComponentType('', 0, import9.ViewEncapsulation.None, styles_LCConversationList, {}));
    }
    return new _View_LCConversationList0(viewUtils, parentInjector, declarationEl);
}
var _View_LCConversationList1 = (function (_super) {
    __extends(_View_LCConversationList1, _super);
    function _View_LCConversationList1(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_LCConversationList1, renderType_LCConversationList, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_LCConversationList1.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'button', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'item item-block');
        this.renderer.setElementAttribute(this._el_0, 'detail-none', '');
        this.renderer.setElementAttribute(this._el_0, 'ion-item', '');
        this._appEl_0 = new import2.AppElement(0, null, this, this._el_0);
        var compView_0 = import22.viewFactory_Item0(this.viewUtils, this.injector(0), this._appEl_0);
        this._Item_0_4 = new import18.Item(this.parent.parentInjector.get(import23.Form), this.parent.parentInjector.get(import13.Config), new import14.ElementRef(this._el_0), this.renderer);
        this._ItemContent_0_5 = new import18.ItemContent();
        this._query_Label_0_0 = new import19.QueryList();
        this._query_Button_0_1 = new import19.QueryList();
        this._query_Icon_0_2 = new import19.QueryList();
        this._appEl_0.initComponent(this._Item_0_4, [], compView_0);
        this._text_1 = this.renderer.createText(null, '\n    ', null);
        this._el_2 = this.renderer.createElement(null, 'text-img', null);
        this.renderer.setElementAttribute(this._el_2, 'item-left', '');
        this._ColorGenerator_2_3 = new import20.ColorGenerator();
        this._TextImage_2_4 = new import21.TextImage(new import14.ElementRef(this._el_2), this._ColorGenerator_2_3);
        this._text_3 = this.renderer.createText(null, '\n    ', null);
        this._el_4 = this.renderer.createElement(null, 'p', null);
        this._el_5 = this.renderer.createElement(this._el_4, 'b', null);
        this._text_6 = this.renderer.createText(this._el_5, '', null);
        this._text_7 = this.renderer.createText(null, '\n	', null);
        this._el_8 = this.renderer.createElement(null, 'p', null);
        this._el_9 = this.renderer.createElement(this._el_8, 'b', null);
        this._text_10 = this.renderer.createText(this._el_9, '', null);
        this._text_11 = this.renderer.createText(this._el_8, '', null);
        this._text_12 = this.renderer.createText(null, '\n  ', null);
        this._query_Label_0_0.reset([]);
        this._Item_0_4.contentLabel = this._query_Label_0_0.first;
        compView_0.create(this._Item_0_4, [
            [].concat([this._el_2]),
            [],
            [].concat([
                this._text_1,
                this._text_3,
                this._el_4,
                this._text_7,
                this._el_8,
                this._text_12
            ]),
            [],
            []
        ], null);
        var disposable_0 = this.renderer.listen(this._el_0, 'click', this.eventHandler(this._handle_click_0_0.bind(this)));
        this._expr_1 = import7.UNINITIALIZED;
        this._expr_2 = import7.UNINITIALIZED;
        this._expr_3 = import7.UNINITIALIZED;
        this._expr_4 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._el_4,
            this._el_5,
            this._text_6,
            this._text_7,
            this._el_8,
            this._el_9,
            this._text_10,
            this._text_11,
            this._text_12
        ], [disposable_0], []);
        return null;
    };
    _View_LCConversationList1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import20.ColorGenerator) && (2 === requestNodeIndex))) {
            return this._ColorGenerator_2_3;
        }
        if (((token === import21.TextImage) && (2 === requestNodeIndex))) {
            return this._TextImage_2_4;
        }
        if (((token === import18.Item) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 12)))) {
            return this._Item_0_4;
        }
        if (((token === import18.ItemContent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 12)))) {
            return this._ItemContent_0_5;
        }
        return notFoundResult;
    };
    _View_LCConversationList1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_1 = this.context.$implicit.name;
        if (import4.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this._TextImage_2_4.text = currVal_1;
            this._expr_1 = currVal_1;
        }
        this.detectContentChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if (this._query_Button_0_1.dirty) {
                this._query_Button_0_1.reset([]);
                this._Item_0_4._buttons = this._query_Button_0_1;
                this._query_Button_0_1.notifyOnChanges();
            }
            if (this._query_Icon_0_2.dirty) {
                this._query_Icon_0_2.reset([]);
                this._Item_0_4._icons = this._query_Icon_0_2;
                this._query_Icon_0_2.notifyOnChanges();
            }
            if ((this.numberOfChecks === 0)) {
                this._Item_0_4.ngAfterContentInit();
            }
        }
        var currVal_2 = import4.interpolate(1, '', this.context.$implicit.name, '');
        if (import4.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setText(this._text_6, currVal_2);
            this._expr_2 = currVal_2;
        }
        var currVal_3 = import4.interpolate(1, '', this.context.$implicit.lastMessage.from, '');
        if (import4.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            this.renderer.setText(this._text_10, currVal_3);
            this._expr_3 = currVal_3;
        }
        var currVal_4 = import4.interpolate(1, ': ', this.context.$implicit.lastMessage.text, '');
        if (import4.checkBinding(throwOnChange, this._expr_4, currVal_4)) {
            this.renderer.setText(this._text_11, currVal_4);
            this._expr_4 = currVal_4;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_LCConversationList1.prototype._handle_click_0_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.parent.context.onConversationItemClick(this.context.$implicit) !== false);
        return (true && pd_0);
    };
    return _View_LCConversationList1;
}(import1.AppView));
function viewFactory_LCConversationList1(viewUtils, parentInjector, declarationEl) {
    return new _View_LCConversationList1(viewUtils, parentInjector, declarationEl);
}
