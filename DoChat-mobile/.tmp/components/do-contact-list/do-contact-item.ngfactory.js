/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from './do-contact-item';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view_utils';
import * as import3 from '@angular/core/src/linker/view';
import * as import5 from '@angular/core/src/linker/element';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/metadata/view';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '../../node_modules/ionic-angular/components/item/item.ngfactory';
import * as import11 from '@angular/core/src/linker/query_list';
import * as import12 from '../../node_modules/ionic-angular/components/avatar/avatar.ngfactory';
import * as import13 from '../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import14 from 'ionic-angular/util/form';
import * as import15 from 'ionic-angular/config/config';
import * as import16 from '@angular/core/src/linker/element_ref';
import * as import17 from '@angular/core/src/linker/template_ref';
import * as import18 from '@angular/common/src/directives/ng_if';
import * as import19 from 'ionic-angular/components/avatar/avatar';
import * as import20 from 'ionic-angular/components/item/item';
import * as import21 from '@angular/core/src/security';
import * as import22 from '../text-img/color-generator';
import * as import23 from '../text-img/text-img.ngfactory';
import * as import24 from '../text-img/text-img';
export var Wrapper_DoContactItem = (function () {
    function Wrapper_DoContactItem() {
        this.changed = false;
        this._friendId = import1.UNINITIALIZED;
        this._friendName = import1.UNINITIALIZED;
        this._avatarUrl = import1.UNINITIALIZED;
        this.context = new import0.DoContactItem();
    }
    Wrapper_DoContactItem.prototype.check_friendId = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._friendId, currValue))) {
            this.changed = true;
            this.context.friendId = currValue;
            this._friendId = currValue;
        }
    };
    Wrapper_DoContactItem.prototype.check_friendName = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._friendName, currValue))) {
            this.changed = true;
            this.context.friendName = currValue;
            this._friendName = currValue;
        }
    };
    Wrapper_DoContactItem.prototype.check_avatarUrl = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._avatarUrl, currValue))) {
            this.changed = true;
            this.context.avatarUrl = currValue;
            this._avatarUrl = currValue;
        }
    };
    Wrapper_DoContactItem.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_DoContactItem;
}());
var renderType_DoContactItem_Host = null;
var _View_DoContactItem_Host0 = (function (_super) {
    __extends(_View_DoContactItem_Host0, _super);
    function _View_DoContactItem_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_DoContactItem_Host0, renderType_DoContactItem_Host, import7.ViewType.HOST, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_DoContactItem_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('do-contact-item', rootSelector, null);
        this._appEl_0 = new import5.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_DoContactItem0(this.viewUtils, this.injector(0), this._appEl_0);
        this._DoContactItem_0_4 = new Wrapper_DoContactItem();
        this._appEl_0.initComponent(this._DoContactItem_0_4.context, [], compView_0);
        compView_0.create(this._DoContactItem_0_4.context, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_DoContactItem_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.DoContactItem) && (0 === requestNodeIndex))) {
            return this._DoContactItem_0_4.context;
        }
        return notFoundResult;
    };
    _View_DoContactItem_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._DoContactItem_0_4.detectChangesInternal(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_DoContactItem_Host0;
}(import3.AppView));
function viewFactory_DoContactItem_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_DoContactItem_Host === null)) {
        (renderType_DoContactItem_Host = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.None, [], {}));
    }
    return new _View_DoContactItem_Host0(viewUtils, parentInjector, declarationEl);
}
export var DoContactItemNgFactory = new import9.ComponentFactory('do-contact-item', viewFactory_DoContactItem_Host0, import0.DoContactItem);
var styles_DoContactItem = [];
var renderType_DoContactItem = null;
var _View_DoContactItem0 = (function (_super) {
    __extends(_View_DoContactItem0, _super);
    function _View_DoContactItem0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_DoContactItem0, renderType_DoContactItem, import7.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_DoContactItem0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._el_0 = this.renderer.createElement(parentRenderNode, 'button', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'item item-block');
        this.renderer.setElementAttribute(this._el_0, 'detail-none', '');
        this.renderer.setElementAttribute(this._el_0, 'ion-item', '');
        this._appEl_0 = new import5.AppElement(0, null, this, this._el_0);
        var compView_0 = import10.viewFactory_Item0(this.viewUtils, this.injector(0), this._appEl_0);
        this._Item_0_4 = new import10.Wrapper_Item(this.parentInjector.get(import14.Form), this.parentInjector.get(import15.Config), new import16.ElementRef(this._el_0), this.renderer);
        this._ItemContent_0_5 = new import10.Wrapper_ItemContent();
        this._query_Label_0_0 = new import11.QueryList();
        this._query_Button_0_1 = new import11.QueryList();
        this._query_Icon_0_2 = new import11.QueryList();
        this._appEl_0.initComponent(this._Item_0_4.context, [], compView_0);
        this._text_1 = this.renderer.createText(null, '\n    ', null);
        this._el_2 = this.renderer.createElement(null, 'ion-avatar', null);
        this.renderer.setElementAttribute(this._el_2, 'item-left', '');
        this._Avatar_2_3 = new import12.Wrapper_Avatar();
        this._text_3 = this.renderer.createText(this._el_2, '\n        ', null);
        this._anchor_4 = this.renderer.createTemplateAnchor(this._el_2, null);
        this._appEl_4 = new import5.AppElement(4, 2, this, this._anchor_4);
        this._TemplateRef_4_5 = new import17.TemplateRef_(this._appEl_4, viewFactory_DoContactItem1);
        this._NgIf_4_6 = new import13.Wrapper_NgIf(this._appEl_4.vcRef, this._TemplateRef_4_5);
        this._text_5 = this.renderer.createText(this._el_2, '\n        ', null);
        this._anchor_6 = this.renderer.createTemplateAnchor(this._el_2, null);
        this._appEl_6 = new import5.AppElement(6, 2, this, this._anchor_6);
        this._TemplateRef_6_5 = new import17.TemplateRef_(this._appEl_6, viewFactory_DoContactItem2);
        this._NgIf_6_6 = new import13.Wrapper_NgIf(this._appEl_6.vcRef, this._TemplateRef_6_5);
        this._text_7 = this.renderer.createText(this._el_2, '\n    ', null);
        this._text_8 = this.renderer.createText(null, '', null);
        this._query_Label_0_0.reset([]);
        this._Item_0_4.context.contentLabel = this._query_Label_0_0.first;
        compView_0.create(this._Item_0_4.context, [
            [].concat([this._el_2]),
            [],
            [].concat([
                this._text_1,
                this._text_8
            ]),
            [],
            []
        ], null);
        var disposable_0 = this.renderer.listen(this._el_0, 'click', this.eventHandler(this._handle_click_0_0.bind(this)));
        this._expr_3 = import1.UNINITIALIZED;
        this.init([], [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._anchor_4,
            this._text_5,
            this._anchor_6,
            this._text_7,
            this._text_8
        ], [disposable_0], []);
        return null;
    };
    _View_DoContactItem0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import17.TemplateRef) && (4 === requestNodeIndex))) {
            return this._TemplateRef_4_5;
        }
        if (((token === import18.NgIf) && (4 === requestNodeIndex))) {
            return this._NgIf_4_6.context;
        }
        if (((token === import17.TemplateRef) && (6 === requestNodeIndex))) {
            return this._TemplateRef_6_5;
        }
        if (((token === import18.NgIf) && (6 === requestNodeIndex))) {
            return this._NgIf_6_6.context;
        }
        if (((token === import19.Avatar) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 7)))) {
            return this._Avatar_2_3.context;
        }
        if (((token === import20.Item) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 8)))) {
            return this._Item_0_4.context;
        }
        if (((token === import20.ItemContent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 8)))) {
            return this._ItemContent_0_5.context;
        }
        return notFoundResult;
    };
    _View_DoContactItem0.prototype.detectChangesInternal = function (throwOnChange) {
        if (this._Item_0_4.detectChangesInternal(this, this._el_0, throwOnChange)) {
            this._appEl_0.componentView.markAsCheckOnce();
        }
        this._ItemContent_0_5.detectChangesInternal(this, this._el_0, throwOnChange);
        this._Avatar_2_3.detectChangesInternal(this, this._el_2, throwOnChange);
        var currVal_1 = this.context.avatar;
        this._NgIf_4_6.check_ngIf(currVal_1, throwOnChange, false);
        this._NgIf_4_6.detectChangesInternal(this, this._anchor_4, throwOnChange);
        var currVal_2 = (!this.context.avatar || (0 === this.context.avatar.length));
        this._NgIf_6_6.check_ngIf(currVal_2, throwOnChange, false);
        this._NgIf_6_6.detectChangesInternal(this, this._anchor_6, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if (this._query_Button_0_1.dirty) {
                this._query_Button_0_1.reset([]);
                this._Item_0_4.context._buttons = this._query_Button_0_1;
                this._query_Button_0_1.notifyOnChanges();
            }
            if (this._query_Icon_0_2.dirty) {
                this._query_Icon_0_2.reset([]);
                this._Item_0_4.context._icons = this._query_Icon_0_2;
                this._query_Icon_0_2.notifyOnChanges();
            }
            if ((this.numberOfChecks === 0)) {
                this._Item_0_4.context.ngAfterContentInit();
            }
        }
        var currVal_3 = import2.interpolate(1, '\n    ', this.context.name, '\n');
        if (import2.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            this.renderer.setText(this._text_8, currVal_3);
            this._expr_3 = currVal_3;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_DoContactItem0.prototype._handle_click_0_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.context.onContactItemClick($event) !== false);
        return (true && pd_0);
    };
    return _View_DoContactItem0;
}(import3.AppView));
export function viewFactory_DoContactItem0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_DoContactItem === null)) {
        (renderType_DoContactItem = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.None, styles_DoContactItem, {}));
    }
    return new _View_DoContactItem0(viewUtils, parentInjector, declarationEl);
}
var _View_DoContactItem1 = (function (_super) {
    __extends(_View_DoContactItem1, _super);
    function _View_DoContactItem1(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_DoContactItem1, renderType_DoContactItem, import7.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_DoContactItem1.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'img', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'fixed');
        this._expr_0 = import1.UNINITIALIZED;
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return null;
    };
    _View_DoContactItem1.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_0 = this.parent.context.avatar;
        if (import2.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setElementProperty(this._el_0, 'src', this.viewUtils.sanitizer.sanitize(import21.SecurityContext.URL, currVal_0));
            this._expr_0 = currVal_0;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_DoContactItem1;
}(import3.AppView));
function viewFactory_DoContactItem1(viewUtils, parentInjector, declarationEl) {
    return new _View_DoContactItem1(viewUtils, parentInjector, declarationEl);
}
var _View_DoContactItem2 = (function (_super) {
    __extends(_View_DoContactItem2, _super);
    function _View_DoContactItem2(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_DoContactItem2, renderType_DoContactItem, import7.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_DoContactItem2.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'text-img', null);
        this._ColorGenerator_0_3 = new import22.ColorGenerator();
        this._TextImage_0_4 = new import23.Wrapper_TextImage(new import16.ElementRef(this._el_0), this._ColorGenerator_0_3);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return null;
    };
    _View_DoContactItem2.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import22.ColorGenerator) && (0 === requestNodeIndex))) {
            return this._ColorGenerator_0_3;
        }
        if (((token === import24.TextImage) && (0 === requestNodeIndex))) {
            return this._TextImage_0_4.context;
        }
        return notFoundResult;
    };
    _View_DoContactItem2.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0 = this.parent.context.name;
        this._TextImage_0_4.check_text(currVal_0, throwOnChange, false);
        this._TextImage_0_4.detectChangesInternal(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_DoContactItem2;
}(import3.AppView));
function viewFactory_DoContactItem2(viewUtils, parentInjector, declarationEl) {
    return new _View_DoContactItem2(viewUtils, parentInjector, declarationEl);
}
