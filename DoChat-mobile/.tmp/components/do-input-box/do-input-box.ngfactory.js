/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from './do-input-box';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view_utils';
import * as import3 from '@angular/core/src/linker/view';
import * as import5 from '@angular/core/src/linker/element';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from 'ionic-angular/util/events';
import * as import9 from '../../providers/chat-service';
import * as import10 from 'ionic-angular/navigation/view-controller';
import * as import11 from '@angular/core/src/metadata/view';
import * as import12 from '@angular/core/src/linker/component_factory';
import * as import13 from '../../node_modules/ionic-angular/components/item/item.ngfactory';
import * as import14 from '@angular/core/src/linker/query_list';
import * as import15 from '../../node_modules/@angular/forms/src/directives/ng_model.ngfactory';
import * as import16 from '../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import17 from '../../node_modules/ionic-angular/components/input/input.ngfactory';
import * as import18 from '../../node_modules/ionic-angular/components/button/button.ngfactory';
import * as import19 from '../../node_modules/ionic-angular/components/icon/icon.ngfactory';
import * as import20 from 'ionic-angular/util/form';
import * as import21 from 'ionic-angular/config/config';
import * as import22 from '@angular/core/src/linker/element_ref';
import * as import23 from 'ionic-angular/components/app/app';
import * as import24 from 'ionic-angular/platform/platform';
import * as import25 from 'ionic-angular/components/content/content';
import * as import26 from 'ionic-angular/navigation/nav-controller';
import * as import27 from '@angular/forms/src/directives/ng_model';
import * as import28 from '@angular/forms/src/directives/ng_control';
import * as import29 from '@angular/forms/src/directives/ng_control_status';
import * as import30 from 'ionic-angular/components/input/input';
import * as import31 from 'ionic-angular/components/icon/icon';
import * as import32 from 'ionic-angular/components/button/button';
import * as import33 from 'ionic-angular/components/item/item';
export var Wrapper_DoInputBox = (function () {
    function Wrapper_DoInputBox(p0, p1, p2) {
        this.changed = false;
        this._conv = import1.UNINITIALIZED;
        this.context = new import0.DoInputBox(p0, p1, p2);
    }
    Wrapper_DoInputBox.prototype.check_conv = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._conv, currValue))) {
            this.changed = true;
            this.context.conv = currValue;
            this._conv = currValue;
        }
    };
    Wrapper_DoInputBox.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_DoInputBox;
}());
var renderType_DoInputBox_Host = null;
var _View_DoInputBox_Host0 = (function (_super) {
    __extends(_View_DoInputBox_Host0, _super);
    function _View_DoInputBox_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_DoInputBox_Host0, renderType_DoInputBox_Host, import7.ViewType.HOST, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_DoInputBox_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('do-input-box', rootSelector, null);
        this._appEl_0 = new import5.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_DoInputBox0(this.viewUtils, this.injector(0), this._appEl_0);
        this._DoInputBox_0_4 = new Wrapper_DoInputBox(this.parentInjector.get(import8.Events), this.parentInjector.get(import9.DoChatService), this.parentInjector.get(import10.ViewController));
        this._appEl_0.initComponent(this._DoInputBox_0_4.context, [], compView_0);
        compView_0.create(this._DoInputBox_0_4.context, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_DoInputBox_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.DoInputBox) && (0 === requestNodeIndex))) {
            return this._DoInputBox_0_4.context;
        }
        return notFoundResult;
    };
    _View_DoInputBox_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._DoInputBox_0_4.detectChangesInternal(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_DoInputBox_Host0;
}(import3.AppView));
function viewFactory_DoInputBox_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_DoInputBox_Host === null)) {
        (renderType_DoInputBox_Host = viewUtils.createRenderComponentType('', 0, import11.ViewEncapsulation.None, [], {}));
    }
    return new _View_DoInputBox_Host0(viewUtils, parentInjector, declarationEl);
}
export var DoInputBoxNgFactory = new import12.ComponentFactory('do-input-box', viewFactory_DoInputBox_Host0, import0.DoInputBox);
var styles_DoInputBox = [];
var renderType_DoInputBox = null;
var _View_DoInputBox0 = (function (_super) {
    __extends(_View_DoInputBox0, _super);
    function _View_DoInputBox0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_DoInputBox0, renderType_DoInputBox, import7.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_DoInputBox0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._el_0 = this.renderer.createElement(parentRenderNode, 'ion-item', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'item item-block');
        this._appEl_0 = new import5.AppElement(0, null, this, this._el_0);
        var compView_0 = import13.viewFactory_Item0(this.viewUtils, this.injector(0), this._appEl_0);
        this._Item_0_4 = new import13.Wrapper_Item(this.parentInjector.get(import20.Form), this.parentInjector.get(import21.Config), new import22.ElementRef(this._el_0), this.renderer);
        this._ItemContent_0_5 = new import13.Wrapper_ItemContent();
        this._query_Label_0_0 = new import14.QueryList();
        this._query_Button_0_1 = new import14.QueryList();
        this._query_Icon_0_2 = new import14.QueryList();
        this._appEl_0.initComponent(this._Item_0_4.context, [], compView_0);
        this._text_1 = this.renderer.createText(null, '\n  ', null);
        this._el_2 = this.renderer.createElement(null, 'ion-input', null);
        this.renderer.setElementAttribute(this._el_2, 'clearInput', '');
        this.renderer.setElementAttribute(this._el_2, 'placeholder', '说点什么');
        this.renderer.setElementAttribute(this._el_2, 'type', 'text');
        this._appEl_2 = new import5.AppElement(2, 0, this, this._el_2);
        var compView_2 = import17.viewFactory_TextInput0(this.viewUtils, this.injector(2), this._appEl_2);
        this._NgModel_2_4 = new import15.Wrapper_NgModel(null, null, null, null);
        this._NgControl_2_5 = this._NgModel_2_4.context;
        this._NgControlStatus_2_6 = new import16.Wrapper_NgControlStatus(this._NgControl_2_5);
        this._TextInput_2_7 = new import17.Wrapper_TextInput(this.parentInjector.get(import21.Config), this.parentInjector.get(import20.Form), this._Item_0_4.context, this.parentInjector.get(import23.App), this.parentInjector.get(import24.Platform), new import22.ElementRef(this._el_2), this.renderer, this.parentInjector.get(import25.Content, null), this.parentInjector.get(import26.NavController, null), this._NgControl_2_5);
        this._appEl_2.initComponent(this._TextInput_2_7.context, [], compView_2);
        compView_2.create(this._TextInput_2_7.context, [], null);
        this._text_3 = this.renderer.createText(null, '\n  ', null);
        this._text_4 = this.renderer.createText(null, '\n  ', null);
        this._el_5 = this.renderer.createElement(null, 'button', null);
        this.renderer.setElementAttribute(this._el_5, 'icon-right', '');
        this.renderer.setElementAttribute(this._el_5, 'ion-button', '');
        this.renderer.setElementAttribute(this._el_5, 'item-right', '');
        this._appEl_5 = new import5.AppElement(5, 0, this, this._el_5);
        var compView_5 = import18.viewFactory_Button0(this.viewUtils, this.injector(5), this._appEl_5);
        this._Button_5_4 = new import18.Wrapper_Button(null, '', this.parentInjector.get(import21.Config), new import22.ElementRef(this._el_5), this.renderer);
        this._appEl_5.initComponent(this._Button_5_4.context, [], compView_5);
        this._text_6 = this.renderer.createText(null, '发送', null);
        this._el_7 = this.renderer.createElement(null, 'ion-icon', null);
        this.renderer.setElementAttribute(this._el_7, 'name', 'send');
        this.renderer.setElementAttribute(this._el_7, 'role', 'img');
        this._Icon_7_3 = new import19.Wrapper_Icon(this.parentInjector.get(import21.Config), new import22.ElementRef(this._el_7), this.renderer);
        compView_5.create(this._Button_5_4.context, [[].concat([
                this._text_6,
                this._el_7
            ])], null);
        this._text_8 = this.renderer.createText(null, '\n', null);
        this._query_Label_0_0.reset([]);
        this._Item_0_4.context.contentLabel = this._query_Label_0_0.first;
        compView_0.create(this._Item_0_4.context, [
            [],
            [],
            [].concat([
                this._text_1,
                this._text_3,
                this._text_4,
                this._text_8
            ]),
            [].concat([this._el_2]),
            [].concat([this._el_5])
        ], null);
        var disposable_0 = this.renderer.listen(this._el_2, 'ngModelChange', this.eventHandler(this._handle_ngModelChange_2_0.bind(this)));
        var disposable_1 = this.renderer.listen(this._el_2, 'input', this.eventHandler(this._handle_input_2_1.bind(this)));
        var disposable_2 = this.renderer.listen(this._el_2, 'keypress', this.eventHandler(this._handle_keypress_2_2.bind(this)));
        var disposable_3 = this.renderer.listen(this._el_2, 'keyup', this.eventHandler(this._handle_keyup_2_3.bind(this)));
        var disposable_4 = this.renderer.listen(this._el_2, 'focus', this.eventHandler(this._handle_focus_2_4.bind(this)));
        var disposable_5 = this.renderer.listen(this._el_2, 'blur', this.eventHandler(this._handle_blur_2_5.bind(this)));
        var subscription_0 = this._NgModel_2_4.context.update.subscribe(this.eventHandler(this._handle_ngModelChange_2_0.bind(this)));
        this._expr_7 = import1.UNINITIALIZED;
        this._expr_8 = import1.UNINITIALIZED;
        this._expr_9 = import1.UNINITIALIZED;
        this._expr_10 = import1.UNINITIALIZED;
        this._expr_11 = import1.UNINITIALIZED;
        this._expr_12 = import1.UNINITIALIZED;
        var subscription_1 = this._TextInput_2_7.context.blur.subscribe(this.eventHandler(this._handle_blur_2_5.bind(this)));
        var subscription_2 = this._TextInput_2_7.context.focus.subscribe(this.eventHandler(this._handle_focus_2_4.bind(this)));
        var disposable_6 = this.renderer.listen(this._el_5, 'click', this.eventHandler(this._handle_click_5_0.bind(this)));
        this._expr_18 = import1.UNINITIALIZED;
        this.init([], [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._text_4,
            this._el_5,
            this._text_6,
            this._el_7,
            this._text_8
        ], [
            disposable_0,
            disposable_1,
            disposable_2,
            disposable_3,
            disposable_4,
            disposable_5,
            disposable_6
        ], [
            subscription_0,
            subscription_1,
            subscription_2
        ]);
        return null;
    };
    _View_DoInputBox0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import27.NgModel) && (2 === requestNodeIndex))) {
            return this._NgModel_2_4.context;
        }
        if (((token === import28.NgControl) && (2 === requestNodeIndex))) {
            return this._NgControl_2_5;
        }
        if (((token === import29.NgControlStatus) && (2 === requestNodeIndex))) {
            return this._NgControlStatus_2_6.context;
        }
        if (((token === import30.TextInput) && (2 === requestNodeIndex))) {
            return this._TextInput_2_7.context;
        }
        if (((token === import31.Icon) && (7 === requestNodeIndex))) {
            return this._Icon_7_3.context;
        }
        if (((token === import32.Button) && ((5 <= requestNodeIndex) && (requestNodeIndex <= 7)))) {
            return this._Button_5_4.context;
        }
        if (((token === import33.Item) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 8)))) {
            return this._Item_0_4.context;
        }
        if (((token === import33.ItemContent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 8)))) {
            return this._ItemContent_0_5.context;
        }
        return notFoundResult;
    };
    _View_DoInputBox0.prototype.detectChangesInternal = function (throwOnChange) {
        if (this._Item_0_4.detectChangesInternal(this, this._el_0, throwOnChange)) {
            this._appEl_0.componentView.markAsCheckOnce();
        }
        this._ItemContent_0_5.detectChangesInternal(this, this._el_0, throwOnChange);
        var currVal_6 = this.context.text;
        this._NgModel_2_4.check_model(currVal_6, throwOnChange, false);
        this._NgModel_2_4.detectChangesInternal(this, this._el_2, throwOnChange);
        this._NgControlStatus_2_6.detectChangesInternal(this, this._el_2, throwOnChange);
        var currVal_13 = '说点什么';
        this._TextInput_2_7.check_placeholder(currVal_13, throwOnChange, false);
        var currVal_14 = '';
        this._TextInput_2_7.check_clearInput(currVal_14, throwOnChange, false);
        var currVal_15 = 'text';
        this._TextInput_2_7.check_type(currVal_15, throwOnChange, false);
        this._TextInput_2_7.detectChangesInternal(this, this._el_2, throwOnChange);
        if (this._Button_5_4.detectChangesInternal(this, this._el_5, throwOnChange)) {
            this._appEl_5.componentView.markAsCheckOnce();
        }
        var currVal_17 = 'send';
        this._Icon_7_3.check_name(currVal_17, throwOnChange, false);
        this._Icon_7_3.detectChangesInternal(this, this._el_7, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if (this._query_Button_0_1.dirty) {
                this._query_Button_0_1.reset([this._Button_5_4.context]);
                this._Item_0_4.context._buttons = this._query_Button_0_1;
                this._query_Button_0_1.notifyOnChanges();
            }
            if (this._query_Icon_0_2.dirty) {
                this._query_Icon_0_2.reset([]);
                this._Item_0_4.context._icons = this._query_Icon_0_2;
                this._query_Icon_0_2.notifyOnChanges();
            }
            this._TextInput_2_7.context.ngAfterContentChecked();
            if ((this.numberOfChecks === 0)) {
                this._Button_5_4.context.ngAfterContentInit();
            }
            if ((this.numberOfChecks === 0)) {
                this._Item_0_4.context.ngAfterContentInit();
            }
        }
        var currVal_7 = this._NgControlStatus_2_6.context.ngClassUntouched;
        if (import2.checkBinding(throwOnChange, this._expr_7, currVal_7)) {
            this.renderer.setElementClass(this._el_2, 'ng-untouched', currVal_7);
            this._expr_7 = currVal_7;
        }
        var currVal_8 = this._NgControlStatus_2_6.context.ngClassTouched;
        if (import2.checkBinding(throwOnChange, this._expr_8, currVal_8)) {
            this.renderer.setElementClass(this._el_2, 'ng-touched', currVal_8);
            this._expr_8 = currVal_8;
        }
        var currVal_9 = this._NgControlStatus_2_6.context.ngClassPristine;
        if (import2.checkBinding(throwOnChange, this._expr_9, currVal_9)) {
            this.renderer.setElementClass(this._el_2, 'ng-pristine', currVal_9);
            this._expr_9 = currVal_9;
        }
        var currVal_10 = this._NgControlStatus_2_6.context.ngClassDirty;
        if (import2.checkBinding(throwOnChange, this._expr_10, currVal_10)) {
            this.renderer.setElementClass(this._el_2, 'ng-dirty', currVal_10);
            this._expr_10 = currVal_10;
        }
        var currVal_11 = this._NgControlStatus_2_6.context.ngClassValid;
        if (import2.checkBinding(throwOnChange, this._expr_11, currVal_11)) {
            this.renderer.setElementClass(this._el_2, 'ng-valid', currVal_11);
            this._expr_11 = currVal_11;
        }
        var currVal_12 = this._NgControlStatus_2_6.context.ngClassInvalid;
        if (import2.checkBinding(throwOnChange, this._expr_12, currVal_12)) {
            this.renderer.setElementClass(this._el_2, 'ng-invalid', currVal_12);
            this._expr_12 = currVal_12;
        }
        var currVal_18 = this._Icon_7_3.context._hidden;
        if (import2.checkBinding(throwOnChange, this._expr_18, currVal_18)) {
            this.renderer.setElementClass(this._el_7, 'hide', currVal_18);
            this._expr_18 = currVal_18;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_DoInputBox0.prototype.destroyInternal = function () {
        this._NgModel_2_4.context.ngOnDestroy();
        this._TextInput_2_7.context.ngOnDestroy();
        this._Icon_7_3.context.ngOnDestroy();
    };
    _View_DoInputBox0.prototype._handle_ngModelChange_2_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = ((this.context.text = $event) !== false);
        return (true && pd_0);
    };
    _View_DoInputBox0.prototype._handle_input_2_1 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.context.onChange($event) !== false);
        return (true && pd_0);
    };
    _View_DoInputBox0.prototype._handle_keypress_2_2 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.context.onKeypress($event) !== false);
        return (true && pd_0);
    };
    _View_DoInputBox0.prototype._handle_keyup_2_3 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.context.onKeyup($event) !== false);
        return (true && pd_0);
    };
    _View_DoInputBox0.prototype._handle_focus_2_4 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.context.onFocuse($event) !== false);
        return (true && pd_0);
    };
    _View_DoInputBox0.prototype._handle_blur_2_5 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.context.onBlur($event) !== false);
        return (true && pd_0);
    };
    _View_DoInputBox0.prototype._handle_click_5_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.context.send() !== false);
        return (true && pd_0);
    };
    return _View_DoInputBox0;
}(import3.AppView));
export function viewFactory_DoInputBox0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_DoInputBox === null)) {
        (renderType_DoInputBox = viewUtils.createRenderComponentType('', 0, import11.ViewEncapsulation.None, styles_DoInputBox, {}));
    }
    return new _View_DoInputBox0(viewUtils, parentInjector, declarationEl);
}
