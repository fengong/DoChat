/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from './chat';
import * as import1 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/element';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from 'ionic-angular/navigation/nav-controller';
import * as import9 from 'ionic-angular/navigation/nav-params';
import * as import10 from 'ionic-angular/navigation/view-controller';
import * as import11 from '@angular/core/src/metadata/view';
import * as import12 from '@angular/core/src/linker/component_factory';
import * as import13 from '../../node_modules/ionic-angular/components/toolbar/toolbar.ngfactory';
import * as import14 from '../../node_modules/ionic-angular/components/navbar/navbar.ngfactory';
import * as import15 from '../../components/do-chat/do-chat.ngfactory';
import * as import16 from 'ionic-angular/config/config';
import * as import17 from '@angular/core/src/linker/element_ref';
import * as import18 from 'ionic-angular/components/app/app';
import * as import19 from 'ionic-angular/util/events';
import * as import20 from '../../providers/data-service';
import * as import21 from '../../providers/chat-service';
import * as import22 from '../../providers/user-service';
import * as import23 from 'ionic-angular/components/navbar/navbar';
import * as import24 from 'ionic-angular/components/toolbar/toolbar';
import * as import25 from '../../components/do-chat/do-chat';
export var Wrapper_ChatPage = (function () {
    function Wrapper_ChatPage(p0, p1, p2) {
        this.changed = false;
        this.context = new import0.ChatPage(p0, p1, p2);
    }
    Wrapper_ChatPage.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_ChatPage;
}());
var renderType_ChatPage_Host = null;
var _View_ChatPage_Host0 = (function (_super) {
    __extends(_View_ChatPage_Host0, _super);
    function _View_ChatPage_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_ChatPage_Host0, renderType_ChatPage_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_ChatPage_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('page-chat', rootSelector, null);
        this._appEl_0 = new import3.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_ChatPage0(this.viewUtils, this.injector(0), this._appEl_0);
        this._ChatPage_0_4 = new Wrapper_ChatPage(this.parentInjector.get(import8.NavController), this.parentInjector.get(import9.NavParams), this.parentInjector.get(import10.ViewController));
        this._appEl_0.initComponent(this._ChatPage_0_4.context, [], compView_0);
        compView_0.create(this._ChatPage_0_4.context, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_ChatPage_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.ChatPage) && (0 === requestNodeIndex))) {
            return this._ChatPage_0_4.context;
        }
        return notFoundResult;
    };
    _View_ChatPage_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._ChatPage_0_4.detectChangesInternal(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_ChatPage_Host0;
}(import1.AppView));
function viewFactory_ChatPage_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_ChatPage_Host === null)) {
        (renderType_ChatPage_Host = viewUtils.createRenderComponentType('', 0, import11.ViewEncapsulation.None, [], {}));
    }
    return new _View_ChatPage_Host0(viewUtils, parentInjector, declarationEl);
}
export var ChatPageNgFactory = new import12.ComponentFactory('page-chat', viewFactory_ChatPage_Host0, import0.ChatPage);
var styles_ChatPage = [];
var renderType_ChatPage = null;
var _View_ChatPage0 = (function (_super) {
    __extends(_View_ChatPage0, _super);
    function _View_ChatPage0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_ChatPage0, renderType_ChatPage, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_ChatPage0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._el_0 = this.renderer.createElement(parentRenderNode, 'ion-header', null);
        this._Header_0_3 = new import13.Wrapper_Header(this.parentInjector.get(import16.Config), new import17.ElementRef(this._el_0), this.renderer, this.parentInjector.get(import10.ViewController, null));
        this._text_1 = this.renderer.createText(this._el_0, '\n	', null);
        this._el_2 = this.renderer.createElement(this._el_0, 'ion-navbar', null);
        this.renderer.setElementAttribute(this._el_2, 'class', 'toolbar');
        this._appEl_2 = new import3.AppElement(2, 0, this, this._el_2);
        var compView_2 = import14.viewFactory_Navbar0(this.viewUtils, this.injector(2), this._appEl_2);
        this._Navbar_2_4 = new import14.Wrapper_Navbar(this.parentInjector.get(import18.App), this.parentInjector.get(import10.ViewController, null), this.parentInjector.get(import8.NavController, null), this.parentInjector.get(import16.Config), new import17.ElementRef(this._el_2), this.renderer);
        this._appEl_2.initComponent(this._Navbar_2_4.context, [], compView_2);
        this._text_3 = this.renderer.createText(null, '\n	', null);
        compView_2.create(this._Navbar_2_4.context, [
            [],
            [],
            [],
            [].concat([this._text_3])
        ], null);
        this._text_4 = this.renderer.createText(this._el_0, '\n\n', null);
        this._text_5 = this.renderer.createText(parentRenderNode, '\n\n', null);
        this._text_6 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_7 = this.renderer.createElement(parentRenderNode, 'do-chat', null);
        this._appEl_7 = new import3.AppElement(7, null, this, this._el_7);
        var compView_7 = import15.viewFactory_DoChat0(this.viewUtils, this.injector(7), this._appEl_7);
        this._DoChat_7_4 = new import15.Wrapper_DoChat(this.parentInjector.get(import19.Events), this.parentInjector.get(import20.DoDataService), compView_7.ref, this.parentInjector.get(import21.DoChatService), this.parentInjector.get(import22.DoUserService), this.parentInjector.get(import10.ViewController), this.parentInjector.get(import8.NavController));
        this._appEl_7.initComponent(this._DoChat_7_4.context, [], compView_7);
        compView_7.create(this._DoChat_7_4.context, [], null);
        this._expr_0 = import7.UNINITIALIZED;
        this._expr_1 = import7.UNINITIALIZED;
        var disposable_0 = this.renderer.listen(this._el_7, 'onMsg', this.eventHandler(this._handle_onMsg_7_0.bind(this)));
        var subscription_0 = this._DoChat_7_4.context.onMsg.subscribe(this.eventHandler(this._handle_onMsg_7_0.bind(this)));
        this.init([], [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._text_4,
            this._text_5,
            this._text_6,
            this._el_7
        ], [disposable_0], [subscription_0]);
        return null;
    };
    _View_ChatPage0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import23.Navbar) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 3)))) {
            return this._Navbar_2_4.context;
        }
        if (((token === import24.Header) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 4)))) {
            return this._Header_0_3.context;
        }
        if (((token === import25.DoChat) && (7 === requestNodeIndex))) {
            return this._DoChat_7_4.context;
        }
        return notFoundResult;
    };
    _View_ChatPage0.prototype.detectChangesInternal = function (throwOnChange) {
        this._Header_0_3.detectChangesInternal(this, this._el_0, throwOnChange);
        this._Navbar_2_4.detectChangesInternal(this, this._el_2, throwOnChange);
        var currVal_3 = this.context.friendIds;
        this._DoChat_7_4.check_friendIds(currVal_3, throwOnChange, false);
        var currVal_4 = this.context.convId;
        this._DoChat_7_4.check_convId(currVal_4, throwOnChange, false);
        var currVal_5 = this.context.convName;
        this._DoChat_7_4.check_convName(currVal_5, throwOnChange, false);
        this._DoChat_7_4.detectChangesInternal(this, this._el_7, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._DoChat_7_4.context.ngAfterContentInit();
            }
        }
        var currVal_0 = this._Navbar_2_4.context._hidden;
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setElementProperty(this._el_2, 'hidden', currVal_0);
            this._expr_0 = currVal_0;
        }
        var currVal_1 = this._Navbar_2_4.context._sbPadding;
        if (import4.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementClass(this._el_2, 'statusbar-padding', currVal_1);
            this._expr_1 = currVal_1;
        }
        this.detectViewChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._Navbar_2_4.context.ngAfterViewInit();
            }
            if ((this.numberOfChecks === 0)) {
                this._DoChat_7_4.context.ngAfterViewInit();
            }
        }
    };
    _View_ChatPage0.prototype._handle_onMsg_7_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.context.onMessage($event) !== false);
        return (true && pd_0);
    };
    return _View_ChatPage0;
}(import1.AppView));
export function viewFactory_ChatPage0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_ChatPage === null)) {
        (renderType_ChatPage = viewUtils.createRenderComponentType('', 0, import11.ViewEncapsulation.None, styles_ChatPage, {}));
    }
    return new _View_ChatPage0(viewUtils, parentInjector, declarationEl);
}
